= forforf_rgl_adjacency

== This is a module that adds functionality to the core rgl/adjacency class
Functionality Added

* Ability to alias nils in the graph
  * #alias_nils(nil_term = :zzznull) will replace any nils in the graph with
    a user provided term (default is :zzznull for alphabetical reasons)
  * overrides #hash and #eql? so that #eql? will return true if two graphs
    have identical set of edges.
  * provides an #indegree method. Its a bit of a hack, as it essentially reverses
    the graph and then calculates #out_degree on the reversed graph. I'm fairly
    certain this results in a correct answer for directed graphs, but not 100% 
    positive.
  * #roots method to find vertices with no sources (i.e., no parents or
    equivalently an in degree of 0)
  * #best_top_vertices method to find the vertices with the most descendants.
    Its vertices, not vertex because multiple vertices could be tied for the
    number of descendants.
  * #edge_array returns an array of edges interestingly enough
  * #source_vertices returns the parent vertices of the current vertex
  * #connected_to? determines if the current graph (self) has any vertices in
    common with another graph.
  * #merge will merge the current directed graph with another directed graph.
  * connected_edges? A test to determine if edges connect to each other. For
    Example edge [:a, :b] is connected to [:b, ;c].
  * #atomic_graphs returns an array of digraphs that are formed by the edges of
    the current graph (i.e. each digraph returned has two vertices and one edge).
    I wish I could have thought of a better name (atomic has multiple meanins)
  * #find_connected_graphs will find all connected graphs and merge them together
    into a common graph. Returns an array of unique graphs.

  

    


== Contributing to forforf_rgl_adjacency
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Dave M. See LICENSE.txt for
further details.

